spring.application.name=order-service
server.port=8083

# Postgresql database:
#spring.datasource.url=jdbc:postgresql://localhost:5432/order-service
#spring.datasource.username=postgres
#spring.datasource.password=C131167679
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

# Eureka Client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=orderPlacedTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=orderPlaced:org.example.dto.OrderWithUserWithBoughtProducts

# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true


